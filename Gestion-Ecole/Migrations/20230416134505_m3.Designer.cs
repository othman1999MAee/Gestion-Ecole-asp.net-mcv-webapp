// <auto-generated />
using Gestion_Ecole.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_Ecole.Migrations
{
    [DbContext(typeof(Gestion_EcoleContext))]
    [Migration("20230416134505_m3")]
    partial class m3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gestion_Ecole.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roles")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Administrator", b =>
                {
                    b.Property<int>("idAdministrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAdministrator"));

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAdministrator");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Director", b =>
                {
                    b.Property<int>("idDirector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDirector"));

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDirector");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Groupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("groupes");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Mark", b =>
                {
                    b.Property<int>("Idmark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmark"));

                    b.Property<int>("idStudent")
                        .HasColumnType("int");

                    b.Property<int>("idSubject")
                        .HasColumnType("int");

                    b.Property<double>("mark")
                        .HasColumnType("float");

                    b.HasKey("Idmark");

                    b.HasIndex("idStudent");

                    b.HasIndex("idSubject");

                    b.ToTable("marks");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Student", b =>
                {
                    b.Property<int>("idStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idStudent"));

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idGroupe")
                        .HasColumnType("int");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idStudent");

                    b.HasIndex("idGroupe");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Subject", b =>
                {
                    b.Property<int>("idSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idSubject"));

                    b.Property<int>("subjectName")
                        .HasColumnType("int");

                    b.HasKey("idSubject");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Teacher", b =>
                {
                    b.Property<int>("idTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTeacher"));

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTeacher");

                    b.HasIndex("IdSubject");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Teacher_Group", b =>
                {
                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<int>("IdGroupe")
                        .HasColumnType("int");

                    b.HasKey("IdTeacher", "IdGroupe");

                    b.HasIndex("IdGroupe");

                    b.ToTable("teacher_Groups");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Mark", b =>
                {
                    b.HasOne("Gestion_Ecole.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("idStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Ecole.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("idSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Student", b =>
                {
                    b.HasOne("Gestion_Ecole.Models.Groupe", "groupe")
                        .WithMany("Students")
                        .HasForeignKey("idGroupe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("groupe");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Teacher", b =>
                {
                    b.HasOne("Gestion_Ecole.Models.Subject", "Subject")
                        .WithMany("teachers")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Teacher_Group", b =>
                {
                    b.HasOne("Gestion_Ecole.Models.Groupe", "Groupe")
                        .WithMany("Groupes_teachers")
                        .HasForeignKey("IdGroupe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Ecole.Models.Teacher", "teacher")
                        .WithMany("Groupes_teachers")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Groupe", b =>
                {
                    b.Navigation("Groupes_teachers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Subject", b =>
                {
                    b.Navigation("teachers");
                });

            modelBuilder.Entity("Gestion_Ecole.Models.Teacher", b =>
                {
                    b.Navigation("Groupes_teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
